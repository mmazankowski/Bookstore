@page "/admin/orders"
@inherits OwningComponentBase<IOrderRepository>

<OrderTable TableTitle="Uncollected Orders" Orders="UncollectedOrders" ButtonLabel="Collected" OrderSelected="CollectOrder"></OrderTable>

<OrderTable TableTitle="Collected Orders" Orders="CollectedOrders" ButtonLabel="Reset" OrderSelected="ResetOrder"></OrderTable>

<button class="btn btn-info" @onclick="@(x => UpdateData())">Refresh Data</button>

@code {

    public IOrderRepository repo => Service;

    public IEnumerable<Order> AllOrders { get; set; }
    public IEnumerable<Order> UncollectedOrders { get; set; }
    public IEnumerable<Order> CollectedOrders { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        AllOrders = await repo.Orders.ToListAsync();
        UncollectedOrders = AllOrders.Where(x => !x.OrderReceived);
        CollectedOrders = AllOrders.Where(x => x.OrderReceived);
    }

    public void CollectOrder(int id) => UpdateOrder(id, true);
    public void ResetOrder(int id) => UpdateOrder(id, false); 

    private void UpdateOrder (int id, bool ordered)
    {
        Order o = repo.Orders.FirstOrDefault(x => x.OrderId == id);
        o.OrderReceived = ordered;
        repo.SaveOrder(o); 
    }
}